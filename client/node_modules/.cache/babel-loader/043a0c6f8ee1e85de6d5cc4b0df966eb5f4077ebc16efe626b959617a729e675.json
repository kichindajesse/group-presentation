{"ast":null,"code":"var _jsxFileName = \"/home/ghost/group-presentation/client/src/components/Youtube.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Youtube = _ref => {\n  let {\n    videoId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"YouTube Video\",\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videoId}?autoplay=1` // Add autoplay parameter\n      ,\n      frameBorder: \"0\",\n      allow: \"autoplay; encrypted-media\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"YouTube Video\",\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videoId}?autoplay=1` // Add autoplay parameter\n      ,\n      frameBorder: \"0\",\n      allow: \"autoplay; encrypted-media\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Youtube;\nexport default Youtube;\nvar _c;\n$RefreshReg$(_c, \"Youtube\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Youtube","_ref","videoId","children","title","width","height","src","frameBorder","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ghost/group-presentation/client/src/components/Youtube.jsx"],"sourcesContent":["import React from 'react';\n\nconst Youtube = ({ videoId }) => {\nreturn (\n    <div>\n      <iframe\n        title=\"YouTube Video\"\n        width=\"560\"\n        height=\"315\"\n        src={`https://www.youtube.com/embed/${videoId}?autoplay=1`} // Add autoplay parameter\n        frameBorder=\"0\"\n        allow=\"autoplay; encrypted-media\"\n        allowFullScreen\n      />\n       <iframe\n        title=\"YouTube Video\"\n        width=\"560\"\n        height=\"315\"\n        src={`https://www.youtube.com/embed/${videoId}?autoplay=1`} // Add autoplay parameter\n        frameBorder=\"0\"\n        allow=\"autoplay; encrypted-media\"\n        allowFullScreen\n      />\n    </div>\n  );\n};\n\nexport default Youtube;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGC,IAAA,IAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAC5B,oBACIF,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MACEK,KAAK,EAAC,eAAe;MACrBC,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAG,iCAAgCL,OAAQ,aAAa,CAAC;MAAA;MAC5DM,WAAW,EAAC,GAAG;MACfC,KAAK,EAAC,2BAA2B;MACjCC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf,eACDf,OAAA;MACCK,KAAK,EAAC,eAAe;MACrBC,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAG,iCAAgCL,OAAQ,aAAa,CAAC;MAAA;MAC5DM,WAAW,EAAC,GAAG;MACfC,KAAK,EAAC,2BAA2B;MACjCC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACC,EAAA,GAvBIf,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}